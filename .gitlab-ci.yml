stages:
  - build
  # - test
  - docker-build
  - deploy
build:
  stage: build
  image: node
  script: 
    - echo "Start building App"
    - npm install
    - npm run build
    - echo "Build successfully!"
# test:
#   stage: test
#   image: node
#   script:
#     - echo "Testing App"
#     - CI=true npm test
#     - echo "Test successfully!"
docker-build:
  stage: docker-build
  image: docker:latest
  services: 
      - name: docker:dind 
        entrypoint: ["env", "-u", "DOCKER_HOST"]
        command: ["dockerd-entrypoint.sh"]
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo $CI_REGISTRY
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
    - echo "Registry image:" $CI_REGISTRY_IMAGE
deploy:
  stage: deploy
  image: kroniak/ssh-client
  before_script:
    - echo "deploying app"
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)" 
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan $PROD_GAMMA_SERVER_IP -H  >> ~/.ssh/known_hosts
  script:
    - ssh nhat@$PROD_GAMMA_SERVER_IP
    - ssh nhat@$PROD_GAMMA_SERVER_IP "sudo docker pull fleeforezz/kiddicute"
    - ssh nhat@$PROD_GAMMA_SERVER_IP "sudo docker stop kiddicute || true && sudo docker rm kiddicute || true"
    - ssh nhat@$PROD_GAMMA_SERVER_IP "sudo docker run -p 9500:9500 -d --name kiddicute fleeforezz/kiddicute"
